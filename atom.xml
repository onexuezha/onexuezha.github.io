<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>XueZha</title>
  
  <subtitle>厌倦了</subtitle>
  <link href="https://onexuezha.github.io/atom.xml" rel="self"/>
  
  <link href="https://onexuezha.github.io/"/>
  <updated>2021-12-26T03:15:04.925Z</updated>
  <id>https://onexuezha.github.io/</id>
  
  <author>
    <name>学渣</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>基于Butterfly的深度优化</title>
    <link href="https://onexuezha.github.io/post/e14dadae.html"/>
    <id>https://onexuezha.github.io/post/e14dadae.html</id>
    <published>2021-12-11T07:25:12.000Z</published>
    <updated>2021-12-26T03:15:04.925Z</updated>
    
    <content type="html"><![CDATA[<h1 id="导言"><a href="#导言" class="headerlink" title="导言"></a>导言</h1><p>这篇教程中我将会从基础着手，一步一步提升网站速度，详细优化过程参见下方摘要</p><h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>1、CDN加速</p><blockquote><p>主题默认不加速的位置</p></blockquote><p>2、图片压缩</p><blockquote><p>压缩图片工作流 </p></blockquote><p>3、Gulp 压缩全站静态资源</p><blockquote><p>gulp的优缺点，并将其安装使用</p></blockquote><p>4、合并css</p><blockquote><p>合并css的方式</p></blockquote><p>5、手机端优化</p><blockquote><p>通过css进行优化</p></blockquote><p>6、镜像站支持</p><blockquote><p>verce，gitee，conding</p></blockquote><p>7、PWA</p><blockquote><p>糖果屋的教程</p></blockquote><p>8、杂项</p><blockquote><p>调整主题配置</p></blockquote><p>8.1、instantpage（预加载）<br>8.2、默认图片更改<br>8.3、Pangu(文字格式优化)<br>8.4、pjax</p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="CDN-加速"><a href="#CDN-加速" class="headerlink" title="CDN 加速"></a>CDN 加速</h2><p>butterflu默认的一些文件不会用jd加速所以请自行更改</p><h2 id="图片压缩"><a href="#图片压缩" class="headerlink" title="图片压缩"></a>图片压缩</h2><p>用<a href="https://github.com/meowtec/Imagine"><strong>imagine</strong></a>进行有损压缩后，再用<a href="http://www.pcfreetime.com/">格式工厂</a>转换为web格式</p><h2 id="Gulp-压缩全站静态资源"><a href="#Gulp-压缩全站静态资源" class="headerlink" title="Gulp 压缩全站静态资源"></a>Gulp 压缩全站静态资源</h2><blockquote><p><a href="https://www.gulpjs.com.cn/">gulp</a> 能够帮助用户自动压缩静态资源，配合各类下属插件，能够压缩包括 css、js、html 乃至各类格式的图片文件。（** 图片文件的压缩效果远远不如上文提到的 imagine 软件，所以此处不再写使用 gulp 压缩图片的内容**）</p></blockquote><p>安装 Gulp 插件：在博客根目录 [Blogroot] 打开终端，输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install --global gulp-cli <span class="comment">#全局安装gulp指令集</span></span><br><span class="line">npm install gulp --save <span class="comment">#安装gulp插件</span></span><br></pre></td></tr></table></figure><p>安装各个下属插件以实现对各类静态资源的压缩。<br>压缩 HTML：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install gulp-htmlclean --save-dev</span><br><span class="line">npm install gulp-html-minifier-terser --save-dev</span><br><span class="line"><span class="comment"># 用gulp-html-minifier-terser可以压缩HTML中的ES6语法</span></span><br></pre></td></tr></table></figure><p>压缩 CSS：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install gulp-clean-css --save-dev</span><br></pre></td></tr></table></figure><p>压缩JS：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install gulp-terser --save-dev</span><br></pre></td></tr></table></figure><p>为 Gulp 创建 gulpfile.js 任务脚本。在博客根目录 [Blogroot] 下新建 gulpfile.js, 打开 [Blogroot]\gulpfile.js, 输入以下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">//用到的各个插件</span><br><span class="line">var gulp = require(<span class="string">&#x27;gulp&#x27;</span>);</span><br><span class="line">var cleanCSS = require(<span class="string">&#x27;gulp-clean-css&#x27;</span>);</span><br><span class="line">var htmlmin = require(<span class="string">&#x27;gulp-html-minifier-terser&#x27;</span>);</span><br><span class="line">var htmlclean = require(<span class="string">&#x27;gulp-htmlclean&#x27;</span>);</span><br><span class="line">// gulp-tester</span><br><span class="line">var terser = require(<span class="string">&#x27;gulp-terser&#x27;</span>);</span><br><span class="line">// 压缩js</span><br><span class="line">gulp.task(<span class="string">&#x27;compress&#x27;</span>, () =&gt;</span><br><span class="line">  gulp.src([<span class="string">&#x27;./public/**/*.js&#x27;</span>, <span class="string">&#x27;!./public/**/*.min.js&#x27;</span>])</span><br><span class="line">    .pipe(terser())</span><br><span class="line">    .pipe(gulp.dest(<span class="string">&#x27;./public&#x27;</span>))</span><br><span class="line">)</span><br><span class="line">//压缩css</span><br><span class="line">gulp.task(<span class="string">&#x27;minify-css&#x27;</span>, () =&gt; &#123;</span><br><span class="line">    <span class="built_in">return</span> gulp.src([<span class="string">&#x27;./public/**/*.css&#x27;</span>])</span><br><span class="line">        .pipe(cleanCSS(&#123;</span><br><span class="line">            compatibility: <span class="string">&#x27;ie11&#x27;</span></span><br><span class="line">        &#125;))</span><br><span class="line">        .pipe(gulp.dest(<span class="string">&#x27;./public&#x27;</span>));</span><br><span class="line">&#125;);</span><br><span class="line">//压缩html</span><br><span class="line">gulp.task(<span class="string">&#x27;minify-html&#x27;</span>, () =&gt; &#123;</span><br><span class="line">    <span class="built_in">return</span> gulp.src(<span class="string">&#x27;./public/**/*.html&#x27;</span>)</span><br><span class="line">        .pipe(htmlclean())</span><br><span class="line">        .pipe(htmlmin(&#123;</span><br><span class="line">            removeComments: <span class="literal">true</span>, //清除html注释</span><br><span class="line">            collapseWhitespace: <span class="literal">true</span>, //压缩html</span><br><span class="line">            collapseBooleanAttributes: <span class="literal">true</span>,</span><br><span class="line">            //省略布尔属性的值，例如：&lt;input checked=<span class="string">&quot;true&quot;</span>/&gt; ==&gt; &lt;input /&gt;</span><br><span class="line">            removeEmptyAttributes: <span class="literal">true</span>,</span><br><span class="line">            //删除所有空格作属性值，例如：&lt;input id=<span class="string">&quot;&quot;</span> /&gt; ==&gt; &lt;input /&gt;</span><br><span class="line">            removeScriptTypeAttributes: <span class="literal">true</span>,</span><br><span class="line">            //删除&lt;script&gt;的<span class="built_in">type</span>=<span class="string">&quot;text/javascript&quot;</span></span><br><span class="line">            removeStyleLinkTypeAttributes: <span class="literal">true</span>,</span><br><span class="line">            //删除&lt;style&gt;和&lt;link&gt;的 <span class="built_in">type</span>=<span class="string">&quot;text/css&quot;</span></span><br><span class="line">            minifyJS: <span class="literal">true</span>, //压缩页面 JS</span><br><span class="line">            minifyCSS: <span class="literal">true</span>, //压缩页面 CSS</span><br><span class="line">            minifyURLs: <span class="literal">true</span>  //压缩页面URL</span><br><span class="line">        &#125;))</span><br><span class="line">        .pipe(gulp.dest(<span class="string">&#x27;./public&#x27;</span>))</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">// 运行gulp命令时依次执行以下任务</span><br><span class="line">gulp.task(<span class="string">&#x27;default&#x27;</span>, gulp.parallel(</span><br><span class="line">  <span class="string">&#x27;compress&#x27;</span>, <span class="string">&#x27;minify-css&#x27;</span>, <span class="string">&#x27;minify-html&#x27;</span></span><br><span class="line">))</span><br></pre></td></tr></table></figure><p>运行指令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl &amp;&amp; hexo g &amp;&amp; gulp &amp;&amp; hexo d</span><br></pre></td></tr></table></figure><h2 id="合并CSS"><a href="#合并CSS" class="headerlink" title="合并CSS"></a>合并CSS</h2><p>提示：我在参照糖果屋的教程时发现不生效，所以这里有一些小修改</p><blockquote><p>将魔改样式整合到 index.css 文件内，减少对服务器的请求次数。能够节省大量加载时间。</p></blockquote><p>在 [Blogroot]\themes\butterfly\source\css\ 路径下新建_custom 文件夹，然后把魔改样式的 CSS 文件拖动进去。文件目录层级可以表示为以下情况：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span></span><br><span class="line">  |__ css</span><br><span class="line">     |__ _custom</span><br><span class="line">        |__ custom1.css</span><br><span class="line">        |__ custom2.css</span><br><span class="line">        |__ custom3.css</span><br><span class="line">     |__ index.styl</span><br></pre></td></tr></table></figure><p>在 [[Blogroot]\themes\butterfly\source\css\index.styl 中新增一行代码:@import ‘_custom/你的css文件名.css’,如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> hexo-config(<span class="string">&#x27;css_prefix&#x27;</span>)</span><br><span class="line">  @import <span class="string">&#x27;nib&#x27;</span></span><br><span class="line">  @import <span class="string">&#x27;_third-party/normalize.min.css&#x27;</span></span><br><span class="line">// project</span><br><span class="line">@import <span class="string">&#x27;var&#x27;</span></span><br><span class="line">@import <span class="string">&#x27;_global/*&#x27;</span></span><br><span class="line">@import <span class="string">&#x27;_highlight/highlight&#x27;</span></span><br><span class="line">@import <span class="string">&#x27;_page/*&#x27;</span></span><br><span class="line">@import <span class="string">&#x27;_layout/*&#x27;</span></span><br><span class="line">@import <span class="string">&#x27;_tags/*&#x27;</span></span><br><span class="line">@import <span class="string">&#x27;_mode/*&#x27;</span></span><br><span class="line"></span><br><span class="line">// search</span><br><span class="line"><span class="keyword">if</span> hexo-config(<span class="string">&#x27;algolia_search.enable&#x27;</span>)</span><br><span class="line">  @import <span class="string">&#x27;_search/index&#x27;</span></span><br><span class="line">  @import <span class="string">&#x27;_search/algolia&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> hexo-config(<span class="string">&#x27;local_search&#x27;</span>) &amp;&amp; hexo-config(<span class="string">&#x27;local_search.enable&#x27;</span>)</span><br><span class="line">  @import <span class="string">&#x27;_search/index&#x27;</span></span><br><span class="line">  @import <span class="string">&#x27;_search/local-search&#x27;</span></span><br><span class="line">// My css</span><br><span class="line">    @import <span class="string">&quot;_custom/custom.css&quot;</span>;</span><br></pre></td></tr></table></figure><p>其中// My css为我的css<br>如果是外链</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@import <span class="string">&#x27;https://cdn.jsdelivr.net/gh/username/repo/css/example.css&#x27;</span></span><br></pre></td></tr></table></figure><p><strong>注意：如果不生效请检查jd的缓存</strong></p><h2 id="手机端优化"><a href="#手机端优化" class="headerlink" title="手机端优化"></a>手机端优化</h2><p>请将如下css添加进你引入的css中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">/*移动端优化：去除归档、标签、最新文章、公告、、只保留网站统计*/</span><br><span class="line"></span><br><span class="line">@media screen and (max-width: 800px) &#123;</span><br><span class="line">    <span class="comment">#aside_content div:not(:last-child) &#123;</span></span><br><span class="line">        display: none;</span><br><span class="line">        font-size: 13px;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="镜像站支持"><a href="#镜像站支持" class="headerlink" title="镜像站支持"></a>镜像站支持</h2><p>目前用的人比较多的有</p><ul><li>vercel：推荐，免费，快速</li><li>gitee：不建议使用，类似GitHub，在国内访问速度快且稳定</li><li>conding：不推荐，已被腾讯收购</li></ul><p>使用方式请自行谷歌</p><h2 id="PWA"><a href="#PWA" class="headerlink" title="PWA"></a>PWA</h2><p>糖果屋教程<a href="https://akilar.top/posts/8f31c3d0/">https://akilar.top/posts/8f31c3d0/</a></p><h2 id="杂项"><a href="#杂项" class="headerlink" title="杂项"></a>杂项</h2><p>其实在主题配置中也有许多的设置可以优化访问速度</p><h3 id="instantpage（预加载）"><a href="#instantpage（预加载）" class="headerlink" title="instantpage（预加载）"></a>instantpage（预加载）</h3><p>找到instantpage将其开启</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">instantpage:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><blockquote><p>当鼠标悬停到链接上超过 65 毫秒时，Instantpage 会对该链接进行预加载，可以提升访问速度。</p></blockquote><h3 id="默认图片更改"><a href="#默认图片更改" class="headerlink" title="默认图片更改"></a>默认图片更改</h3><p>找到default_top_img将其改为自用图片</p><blockquote><p>图片记得按照步骤2进行压缩</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">default_top_img:</span> <span class="string">这里填写你的图片链接</span></span><br></pre></td></tr></table></figure><h3 id="Pangu-文字格式优化"><a href="#Pangu-文字格式优化" class="headerlink" title="Pangu(文字格式优化)"></a>Pangu(文字格式优化)</h3><p>找到pangu将其开启</p><blockquote><p>它会自动替你在网页中所有的中文字和半形的英文、数字、符号之间插入空白。</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">pangu:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span> <span class="comment"># site/post</span></span><br></pre></td></tr></table></figure><h3 id="取消文章顶部图"><a href="#取消文章顶部图" class="headerlink" title="取消文章顶部图"></a>取消文章顶部图</h3><p>找到disable_top_img将其开启</p><blockquote><p>可以使文章页加载速度提升</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">disable_top_img:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h3 id="Pjax"><a href="#Pjax" class="headerlink" title="Pjax"></a>Pjax</h3><blockquote><p>通过 ajax 和 pushState 技术提供了极速的（无刷新 ajax 加载）浏览体验，并且保持了真实的地址、网页标题，浏览器的后退（前进）按钮也可以正常使用</p></blockquote><p>开启只需要在 _config.butterfly.yml 中 开启 pjax</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">pjax:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">exclude:</span></span><br><span class="line">    <span class="comment"># - xxxx</span></span><br><span class="line">    <span class="comment"># - xxxx</span></span><br></pre></td></tr></table></figure><h1 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h1><p>恭喜，你的博客已经完成了优化，可这并不代表结束，<strong>我的这篇文章仅仅针对自己的博客需求</strong>，如果你想获得更好的体验请自行谷歌教程</p>]]></content>
    
    
    <summary type="html">本文记录了hexo的优化教程</summary>
    
    
    
    <category term="hexo" scheme="https://onexuezha.github.io/categories/hexo/"/>
    
    
    <category term="hexo优化" scheme="https://onexuezha.github.io/tags/hexo%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
</feed>
