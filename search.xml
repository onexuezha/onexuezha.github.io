<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>教程：基于Butterfly的深度优化</title>
      <link href="/post/e14dadae.html"/>
      <url>/post/e14dadae.html</url>
      
        <content type="html"><![CDATA[<h1 id="导言"><a href="#导言" class="headerlink" title="导言"></a>导言</h1><p>网站优化是<strong>每一个站长</strong>都要解决的问题，网站优化可以让网站的<strong>关键词搜索靠前</strong>，而打开网页搜索，排名靠前的网站会给人一种网站具有一定的<strong>权威性</strong>、相比较之下有更有<strong>实力的认知</strong>。但更重要的是这关乎到<strong>用户体验</strong>！<br>这篇教程中我将会从<strong>基础优化</strong>着手，一步一步提升网站速度，详细优化过程参见下方目录<br>下图为我的谷歌测速，你可以自己测自己的，这样你就知道与我的差距了</p><p><img src="https://cdn.jsdelivr.net/gh/onexuezha/blog_img//sdyh1.webp"><img src="https://cdn.jsdelivr.net/gh/onexuezha/blog_img//sdyh2.webp"></p><h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>1、CDN加速</p><blockquote><p>简述了蝴蝶主题默认不加速的位置</p></blockquote><p>2、图片压缩</p><blockquote><p>介绍了压缩图片的工作流 </p></blockquote><p>3、Gulp 压缩全站静态资源</p><blockquote><p>提出了gulp的优缺点，并将其安装使用</p></blockquote><p>4、合并css</p><blockquote><p>简述了合并css的好处，并修正了糖果屋的教程错误</p></blockquote><p>5、手机端优化</p><blockquote><p>通过css进行优化</p></blockquote><p>6、镜像站支持<br>7、PWA<br>8、杂项<br>    1、instantpage（预加载）<br>    2、默认图片更改<br>    3、Pangu(文字格式优化)<br> 4、pjax</p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="1、CDN-加速"><a href="#1、CDN-加速" class="headerlink" title="1、CDN 加速"></a>1、CDN 加速</h2><p>这个基本大家都会，但原版butterflu的一些文件不会用jd加速所以请自行更改![1K6@PSUQ<a href="https://cdn.nlark.com/yuque/0/2021/png/23143596/1639187028470-45d96648-c829-47b6-8882-cbee7708c21a.png#clientId=u53755c9b-31bc-4&crop=0&crop=0&crop=1&crop=1&from=drop&id=u3471816e&margin=%5Bobject%20Object%5D&name=1K6%40PSUQ%5BS9JSK8HS6VZU69.png&originHeight=118&originWidth=870&originalType=binary&ratio=1&rotation=0&showTitle=false&size=21027&status=done&style=none&taskId=u15777182-36d6-4aa1-a2b5-fed529649e1&title=">S9JSK8HS6VZU69.png</a><br>这里我已经更改过了</p><h2 id="2、图片压缩"><a href="#2、图片压缩" class="headerlink" title="2、图片压缩"></a>2、图片压缩</h2><p>用<a href="https://github.com/meowtec/Imagine"><strong>imagine</strong></a>进行有损压缩后，再用<a href="http://www.pcfreetime.com/">格式工厂</a>转换为web格式</p><h2 id="3、Gulp-压缩全站静态资源"><a href="#3、Gulp-压缩全站静态资源" class="headerlink" title="3、Gulp 压缩全站静态资源"></a>3、Gulp 压缩全站静态资源</h2><blockquote><p><a href="https://www.gulpjs.com.cn/">gulp</a> 能够帮助用户自动压缩静态资源，配合各类下属插件，能够压缩包括 css、js、html 乃至各类格式的图片文件。（** 图片文件的压缩效果远远不如上文提到的 imagine 软件，所以此处不再写使用 gulp 压缩图片的内容**）</p></blockquote><p>安装 Gulp 插件：在博客根目录 [Blogroot] 打开终端，输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install --global gulp-cli <span class="comment">#全局安装gulp指令集</span></span><br><span class="line">npm install gulp --save <span class="comment">#安装gulp插件</span></span><br></pre></td></tr></table></figure><p>安装各个下属插件以实现对各类静态资源的压缩。<br>压缩 HTML：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install gulp-htmlclean --save-dev</span><br><span class="line">npm install gulp-html-minifier-terser --save-dev</span><br><span class="line"><span class="comment"># 用gulp-html-minifier-terser可以压缩HTML中的ES6语法</span></span><br></pre></td></tr></table></figure><p>压缩 CSS：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install gulp-clean-css --save-dev</span><br></pre></td></tr></table></figure><p>压缩JS：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install gulp-terser --save-dev</span><br></pre></td></tr></table></figure><p>为 Gulp 创建 gulpfile.js 任务脚本。在博客根目录 [Blogroot] 下新建 gulpfile.js, 打开 [Blogroot]\gulpfile.js, 输入以下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">//用到的各个插件</span><br><span class="line">var gulp = require(<span class="string">&#x27;gulp&#x27;</span>);</span><br><span class="line">var cleanCSS = require(<span class="string">&#x27;gulp-clean-css&#x27;</span>);</span><br><span class="line">var htmlmin = require(<span class="string">&#x27;gulp-html-minifier-terser&#x27;</span>);</span><br><span class="line">var htmlclean = require(<span class="string">&#x27;gulp-htmlclean&#x27;</span>);</span><br><span class="line">// gulp-tester</span><br><span class="line">var terser = require(<span class="string">&#x27;gulp-terser&#x27;</span>);</span><br><span class="line">// 压缩js</span><br><span class="line">gulp.task(<span class="string">&#x27;compress&#x27;</span>, () =&gt;</span><br><span class="line">  gulp.src([<span class="string">&#x27;./public/**/*.js&#x27;</span>, <span class="string">&#x27;!./public/**/*.min.js&#x27;</span>])</span><br><span class="line">    .pipe(terser())</span><br><span class="line">    .pipe(gulp.dest(<span class="string">&#x27;./public&#x27;</span>))</span><br><span class="line">)</span><br><span class="line">//压缩css</span><br><span class="line">gulp.task(<span class="string">&#x27;minify-css&#x27;</span>, () =&gt; &#123;</span><br><span class="line">    <span class="built_in">return</span> gulp.src([<span class="string">&#x27;./public/**/*.css&#x27;</span>])</span><br><span class="line">        .pipe(cleanCSS(&#123;</span><br><span class="line">            compatibility: <span class="string">&#x27;ie11&#x27;</span></span><br><span class="line">        &#125;))</span><br><span class="line">        .pipe(gulp.dest(<span class="string">&#x27;./public&#x27;</span>));</span><br><span class="line">&#125;);</span><br><span class="line">//压缩html</span><br><span class="line">gulp.task(<span class="string">&#x27;minify-html&#x27;</span>, () =&gt; &#123;</span><br><span class="line">    <span class="built_in">return</span> gulp.src(<span class="string">&#x27;./public/**/*.html&#x27;</span>)</span><br><span class="line">        .pipe(htmlclean())</span><br><span class="line">        .pipe(htmlmin(&#123;</span><br><span class="line">            removeComments: <span class="literal">true</span>, //清除html注释</span><br><span class="line">            collapseWhitespace: <span class="literal">true</span>, //压缩html</span><br><span class="line">            collapseBooleanAttributes: <span class="literal">true</span>,</span><br><span class="line">            //省略布尔属性的值，例如：&lt;input checked=<span class="string">&quot;true&quot;</span>/&gt; ==&gt; &lt;input /&gt;</span><br><span class="line">            removeEmptyAttributes: <span class="literal">true</span>,</span><br><span class="line">            //删除所有空格作属性值，例如：&lt;input id=<span class="string">&quot;&quot;</span> /&gt; ==&gt; &lt;input /&gt;</span><br><span class="line">            removeScriptTypeAttributes: <span class="literal">true</span>,</span><br><span class="line">            //删除&lt;script&gt;的<span class="built_in">type</span>=<span class="string">&quot;text/javascript&quot;</span></span><br><span class="line">            removeStyleLinkTypeAttributes: <span class="literal">true</span>,</span><br><span class="line">            //删除&lt;style&gt;和&lt;link&gt;的 <span class="built_in">type</span>=<span class="string">&quot;text/css&quot;</span></span><br><span class="line">            minifyJS: <span class="literal">true</span>, //压缩页面 JS</span><br><span class="line">            minifyCSS: <span class="literal">true</span>, //压缩页面 CSS</span><br><span class="line">            minifyURLs: <span class="literal">true</span>  //压缩页面URL</span><br><span class="line">        &#125;))</span><br><span class="line">        .pipe(gulp.dest(<span class="string">&#x27;./public&#x27;</span>))</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">// 运行gulp命令时依次执行以下任务</span><br><span class="line">gulp.task(<span class="string">&#x27;default&#x27;</span>, gulp.parallel(</span><br><span class="line">  <span class="string">&#x27;compress&#x27;</span>, <span class="string">&#x27;minify-css&#x27;</span>, <span class="string">&#x27;minify-html&#x27;</span></span><br><span class="line">))</span><br></pre></td></tr></table></figure><p>运行指令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl &amp;&amp; hexo g &amp;&amp; gulp &amp;&amp; hexo d</span><br></pre></td></tr></table></figure><h2 id="4、合并CSS"><a href="#4、合并CSS" class="headerlink" title="4、合并CSS"></a>4、合并CSS</h2><p>提示：我在参照糖果屋的教程时发现不生效，所以这里有一些小修改</p><blockquote><p>将魔改样式整合到 index.css 文件内，减少对服务器的请求次数。能够节省大量加载时间。</p></blockquote><p>在 [Blogroot]\themes\butterfly\source\css\ 路径下新建_custom 文件夹，然后把魔改样式的 CSS 文件拖动进去。文件目录层级可以表示为以下情况：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span></span><br><span class="line">  |__ css</span><br><span class="line">     |__ _custom</span><br><span class="line">        |__ custom1.css</span><br><span class="line">        |__ custom2.css</span><br><span class="line">        |__ custom3.css</span><br><span class="line">     |__ index.styl</span><br></pre></td></tr></table></figure><p>在 [[Blogroot]\themes\butterfly\source\css\index.styl 中新增一行代码:@import ‘_custom/你的css文件名.css’,如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> hexo-config(<span class="string">&#x27;css_prefix&#x27;</span>)</span><br><span class="line">  @import <span class="string">&#x27;nib&#x27;</span></span><br><span class="line">  @import <span class="string">&#x27;_third-party/normalize.min.css&#x27;</span></span><br><span class="line">// project</span><br><span class="line">@import <span class="string">&#x27;var&#x27;</span></span><br><span class="line">@import <span class="string">&#x27;_global/*&#x27;</span></span><br><span class="line">@import <span class="string">&#x27;_highlight/highlight&#x27;</span></span><br><span class="line">@import <span class="string">&#x27;_page/*&#x27;</span></span><br><span class="line">@import <span class="string">&#x27;_layout/*&#x27;</span></span><br><span class="line">@import <span class="string">&#x27;_tags/*&#x27;</span></span><br><span class="line">@import <span class="string">&#x27;_mode/*&#x27;</span></span><br><span class="line"></span><br><span class="line">// search</span><br><span class="line"><span class="keyword">if</span> hexo-config(<span class="string">&#x27;algolia_search.enable&#x27;</span>)</span><br><span class="line">  @import <span class="string">&#x27;_search/index&#x27;</span></span><br><span class="line">  @import <span class="string">&#x27;_search/algolia&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> hexo-config(<span class="string">&#x27;local_search&#x27;</span>) &amp;&amp; hexo-config(<span class="string">&#x27;local_search.enable&#x27;</span>)</span><br><span class="line">  @import <span class="string">&#x27;_search/index&#x27;</span></span><br><span class="line">  @import <span class="string">&#x27;_search/local-search&#x27;</span></span><br><span class="line">// My css</span><br><span class="line">    @import <span class="string">&quot;_custom/custom.css&quot;</span>;</span><br></pre></td></tr></table></figure><p>其中// My css为我的css<br>如果是外链</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@import <span class="string">&#x27;https://cdn.jsdelivr.net/gh/username/repo/css/example.css&#x27;</span></span><br></pre></td></tr></table></figure><p><strong>注意：如果不生效请检查jd的缓存</strong></p><h2 id="6、手机端优化"><a href="#6、手机端优化" class="headerlink" title="6、手机端优化"></a>6、手机端优化</h2><p>请将如下css添加进你引入的css中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">/*移动端优化：去除归档、标签、最新文章、公告、、只保留网站统计*/</span><br><span class="line"></span><br><span class="line">@media screen and (max-width: 800px) &#123;</span><br><span class="line">    <span class="comment">#aside_content div:not(:last-child) &#123;</span></span><br><span class="line">        display: none;</span><br><span class="line">        font-size: 13px;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7、镜像站支持"><a href="#7、镜像站支持" class="headerlink" title="7、镜像站支持"></a>7、镜像站支持</h2><p>目前用的人比较多的有</p><ul><li>vercel：博主现在在用的，免费，快速</li><li>gitee：国内的GitHub，不推荐，但在国内访问速度快</li><li>conding：极不推荐，腾讯家的乐色</li></ul><p>用什么取决于你我就不写教程了(网上一堆)</p><h2 id="8、PWA"><a href="#8、PWA" class="headerlink" title="8、PWA"></a>8、PWA</h2><p>去看糖果屋吧<a href="https://akilar.top/posts/8f31c3d0/">https://akilar.top/posts/8f31c3d0/</a></p><h2 id="9、杂项"><a href="#9、杂项" class="headerlink" title="9、杂项"></a>9、杂项</h2><h3 id="1、instantpage（预加载）"><a href="#1、instantpage（预加载）" class="headerlink" title="1、instantpage（预加载）"></a>1、instantpage（预加载）</h3><p>其实在主题配置中也有许多的设置可以优化访问速度<br>找到instantpage将其开启</p><blockquote><p>当鼠标悬停到链接上超过 65 毫秒时，Instantpage 会对该链接进行预加载，可以提升访问速度。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">instantpage: <span class="literal">true</span></span><br></pre></td></tr></table></figure><h3 id="2、默认图片更改"><a href="#2、默认图片更改" class="headerlink" title="2、默认图片更改"></a>2、默认图片更改</h3><p>找到default_top_img将其开启</p><blockquote><p>图片记得按照步骤2进行压缩</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">default_top_img: 这里填写你的图片链接</span><br></pre></td></tr></table></figure><h3 id="3、Pangu-文字格式优化"><a href="#3、Pangu-文字格式优化" class="headerlink" title="3、Pangu(文字格式优化)"></a>3、Pangu(文字格式优化)</h3><p>找到pangu将其开启</p><blockquote><p>它会自动替你在网页中所有的中文字和半形的英文、数字、符号之间插入空白。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pangu:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">false</span></span><br><span class="line">  field: post <span class="comment"># site/post</span></span><br></pre></td></tr></table></figure><h3 id="4、取消文章顶部图"><a href="#4、取消文章顶部图" class="headerlink" title="4、取消文章顶部图"></a>4、取消文章顶部图</h3><p>找到disable_top_img将其开启</p><blockquote><p>可以使文章页加载速度提升</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">disable_top_img: <span class="literal">true</span></span><br></pre></td></tr></table></figure><h2 id="5、Pjax"><a href="#5、Pjax" class="headerlink" title="5、Pjax"></a>5、Pjax</h2><blockquote><p>通过 ajax 和 pushState 技术提供了极速的（无刷新 ajax 加载）浏览体验，并且保持了真实的地址、网页标题，浏览器的后退（前进）按钮也可以正常使用</p></blockquote><p>开启只需要在 _config.butterfly.yml 中 开启 pjax</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">pjax:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  exclude:</span><br><span class="line">    <span class="comment"># - xxxx</span></span><br><span class="line">    <span class="comment"># - xxxx</span></span><br></pre></td></tr></table></figure><h1 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h1><p>现在你的网站一定快了很多，相应的用户体验感，搜索权重等提升也不会少。<br>可这并不代表你就结束了优化，<strong>我的这篇文章仅仅针对自己的博客需求</strong>，如果你想获得更好的体验请自行百度教程<br>如果有什么问题就在下方留言吧（回复随缘），还有感谢kd告诉了我默认图片如何更改<br>​</p><p><strong>本文长期更新~</strong><a href="https://www.yuque.com/onexuezha/blog/koetu2">语雀链接</a></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>[糖果屋的优化日记](</p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo优化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/post/16107.html"/>
      <url>/post/16107.html</url>
      
        <content type="html"><![CDATA[<p>Hi~</p><p>欢迎来到我的博客</p><p>博客中的文章均首发于<a href="https://www.yuque.com/onexuezha/blog">语雀</a>，当然知乎，csdn，掘金也有，只是不全</p><p>在这里我会记录一些笔记，吐槽，白嫖的文章，当然啦，全部随缘更新~</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>c#笔记(一)</title>
      <link href="/post/64126.html"/>
      <url>/post/64126.html</url>
      
        <content type="html"><![CDATA[<h1 id="程序的结构"><a href="#程序的结构" class="headerlink" title="程序的结构"></a>程序的结构</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">//注释：引入命名空间</span><br><span class="line">using System; </span><br><span class="line"></span><br><span class="line">namespace _001_开始</span><br><span class="line">&#123;</span><br><span class="line">    //这个是Program类</span><br><span class="line">    class Program</span><br><span class="line">    &#123;</span><br><span class="line">        //这个是Main方法</span><br><span class="line">        static void Main(string[] args)</span><br><span class="line">        &#123;</span><br><span class="line">            //这个是输出语句</span><br><span class="line">            Console.WriteLine(&quot;Hello World!&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>层级：类-&gt;方法-&gt;语句</strong></p><p>在<strong>类</strong>中有<code>&#123; &#125;</code>包裹<strong>方法</strong></p><p>在<strong>方法</strong>中有<code>&#123; &#125;</code>包裹<strong>语句</strong></p><h1 id="语法点"><a href="#语法点" class="headerlink" title="语法点"></a>语法点</h1><h2 id="1、注释"><a href="#1、注释" class="headerlink" title="1、注释"></a>1、注释</h2><ul><li>单⾏注释</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">//我是一条单行注释</span><br></pre></td></tr></table></figure><ul><li>多⾏注释</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/* 我是多行注释 */</span><br><span class="line">/*大部分会写成这样</span><br><span class="line">* 中间的*无用，仅仅为了代码的可读性</span><br><span class="line">*/</span><br></pre></td></tr></table></figure><ul><li>单行注释快捷键</li></ul><p>注释<code>ctrl+k ctrl+c</code> </p><p>取消注释<code>ctrl+k ctrl+u</code></p><h2 id="2、代码结束时"><a href="#2、代码结束时" class="headerlink" title="2、代码结束时"></a>2、代码结束时</h2><p>⼀⾏⼀条语句，语句的结束加上；</p><h2 id="3、执行快捷键"><a href="#3、执行快捷键" class="headerlink" title="3、执行快捷键"></a>3、执行快捷键</h2><p>开始调试<code>f5</code></p><p>开始执行（不调试）<code>ctrl + f5</code></p><h2 id="4、输出的两个方法"><a href="#4、输出的两个方法" class="headerlink" title="4、输出的两个方法"></a>4、输出的两个方法</h2><ul><li>Write</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-&gt; Console.Write(&quot;1&quot;);</span><br><span class="line">-&gt; Console.Write(&quot;2&quot;);</span><br><span class="line">-&gt; Console.Write(&quot;3&quot;);</span><br><span class="line">//输出结果</span><br><span class="line">-&gt; 123</span><br></pre></td></tr></table></figure><ul><li>WriteLine</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-&gt; Console.WriteLine(&quot;1&quot;);</span><br><span class="line">-&gt; Console.WriteLine(&quot;2&quot;);</span><br><span class="line">-&gt; Console.WriteLine(&quot;3&quot;);</span><br><span class="line">//输出结果</span><br><span class="line">-&gt; 1</span><br><span class="line">   2</span><br><span class="line">   3</span><br></pre></td></tr></table></figure><p>区别：Write单行输出，WriteLine换行输出</p><h2 id="3、转换字符"><a href="#3、转换字符" class="headerlink" title="3、转换字符"></a>3、转换字符</h2><table><thead><tr><th>字符</th><th>作用</th></tr></thead><tbody><tr><td>\n</td><td>换行</td></tr><tr><td>\t</td><td>制表符(tab)</td></tr><tr><td>\</td><td>\</td></tr><tr><td>&quot;</td><td>“</td></tr></tbody></table><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">//输入</span><br><span class="line">-&gt; Console.Write(&quot;Hello\nWorld&quot;);</span><br><span class="line">//输出</span><br><span class="line">-&gt; Hello</span><br><span class="line">   World</span><br><span class="line">----------------------------------------------------</span><br><span class="line">//输入</span><br><span class="line">-&gt; Console.Write(&quot;Hello\tWorld&quot;);</span><br><span class="line">//输出</span><br><span class="line">-&gt; HelloWorld</span><br><span class="line">----------------------------------------------------</span><br><span class="line">//输入</span><br><span class="line">-&gt; Console.Write(&quot;Hello\\World&quot;);</span><br><span class="line">//输出</span><br><span class="line">-&gt; Hello\World</span><br><span class="line">----------------------------------------------------</span><br><span class="line">//输入</span><br><span class="line">-&gt; Console.Write(&quot;Hello\&quot;World&quot;);</span><br><span class="line">//输出</span><br><span class="line">-&gt; Hello&quot;World</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> c# </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
