<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>2021年终总结</title>
      <link href="/post/a23e5172.html"/>
      <url>/post/a23e5172.html</url>
      
        <content type="html"><![CDATA[<p> 不知不觉，2021已经过去</p><p>在这一年里，我的收获说小不小，说大不大</p><p>我遇见了很多朋友</p><p>同时</p><p>我也遇到了无数个bug，至今记忆犹新</p><p>其实，早在我初一时就开始搭建博客了，那时的我对前端基本空白，自己也不想靠别人也就没加蝴蝶主题qq群，一个人每天对着电脑敲代码，改bug。</p><p>可惜当时的忘记装一个插件导致无数次失败，但我又住校周六周日才有空去搞博客。最后还是放弃了</p><p>暑假来了，我又尝试搭建博客，但这次不同，我学了HTML与css，过程仍然艰辛，常常是一个bug改好了，另一个bug出来了，改也改不完，再一次放弃。当然不是说暑假就只搭建了博客，我还另外学了Unity开发了一款超多bug的游戏（反正干啥都会遇见bug）</p><p>步入初二的大门，我依然没有放弃，每天都在和bug做斗争，尽管每次都是我输</p><p>直到——2021.9.3</p><p>初二，不住校了，在上完晚自习后就萌生了搞Linux的想法，间接接触了vm虚拟机，也知道了快照的概念，按理说我应该会把精力方式到Ubuntu上，但事实并非如此，当我知道vm虚拟机的快照功能后，立马想到了可以用来搭建hexo，很庆幸，这是个正确的选择。后面就开始用快照功能一点一点搭建博客（以下是我保存的快照）<img src="https://unpkg.zhimg.com/onexuezha_article_img1@1.0.4/2021%E5%B9%B4%E6%80%BB%E6%80%BB%E7%BB%93/2021_1.webp"></p><p>然而</p><p>bug并没有离开我，后面建着建着发现很多奇葩的bug，比如代码复制用不了，无论点击哪个文章都跳转到同一个文章，等我解决了这些bug，又发现index.css加载不了，整个页面只有HTML</p><p>因此</p><p>我又把博客想方设法地转到了物理机上，最后成了，也一直用到了今天</p><p>遇到了这么多bug，我觉得还是蛮值得，在这么多bug中我总结了很多经验，养成了许多好习惯，更为重要的是我获得了比别人更扎实的基础，这在将来对我一定会有很大的帮助！</p><p>博客具体从什么时候搭建已经无可追寻了，但大概是2020.4~2020.6这一段时间，说来惭愧，一个搞了1年多的博客到现在却只有几篇文章。</p><p>诚然，我的博客已经建好了，但是我的文笔，技术仍然有欠缺，如果你觉得本站有任何的缺点请在<a href="https://onexuezha.github.io/feedback/index.html">反馈</a>页面提出</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>苹果御用字体</title>
      <link href="/post/aa1b02f7.html"/>
      <url>/post/aa1b02f7.html</url>
      
        <content type="html"><![CDATA[<p>  不久前去kd的博客转了转发现他换了一款字体</p><p><img src="https://unpkg.zhimg.com/onexuezha_article_img1@1.0.2/%E8%8B%B9%E6%9E%9C%E5%BE%A1%E7%94%A8%E5%AD%97%E4%BD%93/1.webp" alt="1"></p><p>这让我也萌发了换字体的想法，也就时本文的主角——苹方</p><h1 id="果方"><a href="#果方" class="headerlink" title="果方"></a>果方</h1><p>在IOS 9的发布会中，公布了一款苹果官方中文字体苹方</p><p><img src="https://unpkg.zhimg.com/onexuezha_article_img1@1.0.2/%E8%8B%B9%E6%9E%9C%E5%BE%A1%E7%94%A8%E5%AD%97%E4%BD%93/2.webp" alt="2"></p><p>当你看到这篇文章时我的博客已经换好了果方字体，反正我觉得比以前的字体好了很多</p><h1 id="其他的苹果字体"><a href="#其他的苹果字体" class="headerlink" title="其他的苹果字体"></a>其他的苹果字体</h1><h2 id="苹果品牌字体变迁"><a href="#苹果品牌字体变迁" class="headerlink" title="苹果品牌字体变迁"></a>苹果品牌字体变迁</h2><p>苹果早期的字体，是一款以衬线字体Garamond的Apple Garamond，可以追溯到上世纪八十年代：</p><p><img src="https://unpkg.zhimg.com/onexuezha_article_img1@1.0.2/%E8%8B%B9%E6%9E%9C%E5%BE%A1%E7%94%A8%E5%AD%97%E4%BD%93/3.webp" alt="img"></p><p>这款字体也是公认拥有最好可读性的字体之一。</p><p><img src="https://unpkg.zhimg.com/onexuezha_article_img1@1.0.2/%E8%8B%B9%E6%9E%9C%E5%BE%A1%E7%94%A8%E5%AD%97%E4%BD%93/4.webp" alt="img"></p><p>当时的苹果，也并非仅仅使用这一款字体，一些品牌海报上也会出现无衬线字体</p><p><img src="https://unpkg.zhimg.com/onexuezha_article_img1@1.0.2/%E8%8B%B9%E6%9E%9C%E5%BE%A1%E7%94%A8%E5%AD%97%E4%BD%93/5.webp" alt="img"></p><p>乔布斯回归苹果之后，苹果将品牌字体转换为一款可读性强，且典雅温和的无衬线字体Myriad，这也是苹果字体的一次大转变</p><p><img src="https://unpkg.zhimg.com/onexuezha_article_img1@1.0.2/%E8%8B%B9%E6%9E%9C%E5%BE%A1%E7%94%A8%E5%AD%97%E4%BD%93/6.webp" alt="img"></p><p>这款字体线条简洁温和，可读性好，也非常符合苹果的设计风格</p><p><img src="https://unpkg.zhimg.com/onexuezha_article_img1@1.0.2/%E8%8B%B9%E6%9E%9C%E5%BE%A1%E7%94%A8%E5%AD%97%E4%BD%93/7.webp" alt="img"></p><p>如果你的PPT设计中，有大量的英文文字，可以考虑采用这款字体，整体界面非常舒适，现代感和商务感很强</p><p><img src="https://unpkg.zhimg.com/onexuezha_article_img1@1.0.2/%E8%8B%B9%E6%9E%9C%E5%BE%A1%E7%94%A8%E5%AD%97%E4%BD%93/8.webp" alt="img"></p><p>而现在，苹果官网以及一些广告中的字体，已经被旧金山字体所取代，但还是能看到Myriad的身影</p><p><img src="https://unpkg.zhimg.com/onexuezha_article_img1@1.0.2/%E8%8B%B9%E6%9E%9C%E5%BE%A1%E7%94%A8%E5%AD%97%E4%BD%93/9.webp" alt="img"></p><h2 id="苹果IOS系统字体"><a href="#苹果IOS系统字体" class="headerlink" title="苹果IOS系统字体"></a>苹果IOS系统字体</h2><p>苹果第一代IOS 1，就引入了Helvetica字体，这也是一款无衬线字体，现在大家在苹果产品中，还能经常看到这一款字体</p><p><img src="https://unpkg.zhimg.com/onexuezha_article_img1@1.0.2/%E8%8B%B9%E6%9E%9C%E5%BE%A1%E7%94%A8%E5%AD%97%E4%BD%93/10.webp" alt="img"></p><p>这款字体甚至衍生出了，另一款知名字体，微软系统自带的西文字体——Arial。</p><p><img src="https://unpkg.zhimg.com/onexuezha_article_img1@1.0.2/%E8%8B%B9%E6%9E%9C%E5%BE%A1%E7%94%A8%E5%AD%97%E4%BD%93/11.webp" alt="img"></p><p>Helvetica这款字体，字形简洁朴素，在小屏幕的移动端可读性强，更适合手机端内容的阅读与使用</p><p><img src="https://pic2.zhimg.com/80/v2-2243248bae47f500ff82929b84d072fd_720w.jpg" alt="img"></p><p>但是，被苹果钟爱多年的字体，也终于在IOS 9之后，被苹果的旧金山字体所取代：</p><p><img src="https://unpkg.zhimg.com/onexuezha_article_img1@1.0.2/%E8%8B%B9%E6%9E%9C%E5%BE%A1%E7%94%A8%E5%AD%97%E4%BD%93/12.webp" alt="img"></p><p>旧金山字体现已成为，IOS系统和苹果官网默认的字体，线条非常简洁，也属于无衬线字体。</p><p><img src="https://unpkg.zhimg.com/onexuezha_article_img1@1.0.2/%E8%8B%B9%E6%9E%9C%E5%BE%A1%E7%94%A8%E5%AD%97%E4%BD%93/13.webp" alt="img"></p><p>在小字号的情况下，可读性比Helvetica更好：</p><p><img src="https://unpkg.zhimg.com/onexuezha_article_img1@1.0.2/%E8%8B%B9%E6%9E%9C%E5%BE%A1%E7%94%A8%E5%AD%97%E4%BD%93/14.webp" alt="img"></p><p>整套字体包含30个字重，相比于苹果曾经的系统字体，更为丰富。</p><p><img src="https://unpkg.zhimg.com/onexuezha_article_img1@1.0.2/%E8%8B%B9%E6%9E%9C%E5%BE%A1%E7%94%A8%E5%AD%97%E4%BD%93/15.webp" alt="img"></p><p>相信大家都有过类似的经历，我们平时使用的很多字体符号偏左，甚至是偏上或偏下，简直逼死强迫症。</p><p>这款字体，则支持符号整体居中，非常舒适：</p><p><img src="https://unpkg.zhimg.com/onexuezha_article_img1@1.0.2/%E8%8B%B9%E6%9E%9C%E5%BE%A1%E7%94%A8%E5%AD%97%E4%BD%93/16.webp" alt="img"></p><p>对于小字号的显示也很友好，解决了Helvetica 在小字号的情况下，a、e、s等字母容易混淆的问题：</p><p><img src="https://unpkg.zhimg.com/onexuezha_article_img1@1.0.2/%E8%8B%B9%E6%9E%9C%E5%BE%A1%E7%94%A8%E5%AD%97%E4%BD%93/17.webp" alt="img"></p><p><img src="https://unpkg.zhimg.com/onexuezha_article_img1@1.0.2/%E8%8B%B9%E6%9E%9C%E5%BE%A1%E7%94%A8%E5%AD%97%E4%BD%93/18.webp"></p><blockquote><p>参考<a href="https://zhuanlan.zhihu.com/p/400771370?ivk_sa=1024320u">https://zhuanlan.zhihu.com/p/400771370?ivk_sa=1024320u</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 闲聊杂谈 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>加密软件VeraCrypt</title>
      <link href="/post/ed8385e4.html"/>
      <url>/post/ed8385e4.html</url>
      
        <content type="html"><![CDATA[<h1 id="导言"><a href="#导言" class="headerlink" title="导言"></a>导言</h1><p>最近有些文件需要加密，防止被别人窃取，但是找了很久也没找到符合心意的软件，好在皇天不负有心人，我最终找到了号称FBI也破解不了的加密软件</p><h1 id="什么是VeraCrypt？"><a href="#什么是VeraCrypt？" class="headerlink" title="什么是VeraCrypt？"></a>什么是VeraCrypt？</h1><p><a href="https://veracrypt.fr/en/Home.html">下载链接</a></p><p>VeraCrypt 中文版是一款适用于 Windows，Mac OSX 和 Linux 的免费开源磁盘加密软件。VeraCrypt 是 TrueCrypt 的分支，主要开发者是法国的 Mounir Idrassi，他在 TrueCrypt 基础上强化了防暴力免费功能。VeraCrypt 增强了用于系统和分区加密的算法的安全性，使其免受暴力免费攻击。VeraCrypt 还解决了TrueCrypt中发现的许多漏洞和安全问题。</p><h1 id="VeraCrypt-主要特点"><a href="#VeraCrypt-主要特点" class="headerlink" title="VeraCrypt 主要特点"></a>VeraCrypt 主要特点</h1><p>在文件中创建虚拟加密磁盘并将其作为实际磁盘安装。<br>加密整个分区或存储设备，如 USB 闪存驱动器或硬盘驱动器。<br>加密安装 Windows 的分区或驱动器（预启动身份验证）。<br>加密是自动的，实时的（即时）和透明的。<br>并行化和流水线操作允许读取和写入数据，就像驱动器未加密一样快。<br>加密可以在现代处理器上进行硬件加速。<br>如果对手强迫您泄露密码，则提供合理的拒绝：隐藏卷（隐写）和隐藏的操作系统。</p><p>VeraCrypt 是一个用于建立和维护动态加密卷（数据存储设备）的软件。即时加密意味着数据在保存之前就会自动加密，并在加载后立即解密，无需任何用户干预。如果不使用正确的密码/密钥文件或正确的加密密钥，则无法读取（解密）存储在加密卷上的数据。整个文件系统被加密（例如，文件名，文件夹名，每个文件的内容，空闲空间，元数据等）。</p><p>可以将文件复制到已安装的 VeraCrypt 卷中，也可以将其复制到任何普通磁盘上（例如，通过简单的拖放操作）。在从加密的 VeraCrypt 卷读取或复制文件时，文件会在运行中（在内存/RAM 中）自动解密。同样，正在写入或复制到 VeraCrypt 卷的文件会在 RAM 中自动加密（在它们写入磁盘之前）。请注意，这并不意味着要加密/解密的整个文件必须先存储在RAM中才能加密/解密。VeraCrypt 没有额外的内存（RAM）要求。有关如何完成此操作的说明，请参阅以下段落。</p><p>假设有一个 .avi 视频文件存储在 VeraCrypt 卷上（因此，视频文件是完全加密的）。用户提供正确的密码（和/或密钥文件）并安装（打开）VeraCrypt 卷。当用户双击视频文件的图标时，操作系统启动与文件类型相关联的应用程序 – 通常是媒体播放器。然后，媒体播放器开始将视频文件的一小部分初始部分从 VeraCrypt 加密卷加载到 RAM（存储器）以便播放它。在加载该部分时，VeraCrypt 会自动解密它（在 RAM 中）。然后，媒体播放器播放视频的解密部分（存储在 RAM 中）。在播放此部分时，媒体播放器开始将另一小部分视频文件从 VeraCrypt 加密卷加载到 RAM（内存），然后重复该过程。此过程称为动态加密/解密，适用于所有文件类型（不仅适用于视频文件）。</p><p>请注意，VeraCrypt 从不将任何解密数据保存到磁盘 – 它只将它们临时存储在 RAM（内存）中。即使安装了卷，存储在卷中的数据仍然是加密的。当您重新启动Windows或关闭计算机时，将卸除卷，并且将无法访问（并加密）存储在其中的文件。即使电源突然中断（没有正确的系统关闭），存储在卷中的文件也是不可访问（和加密）的。要使它们再次可访问，您必须装入卷（并提供正确的密码和/或密钥文件）。</p><p>有关 VeraCrypt 功能的更多信息，请参阅文档。</p>]]></content>
      
      
      <categories>
          
          <category> 优质推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记忆软件Anki</title>
      <link href="/post/f6880df7.html"/>
      <url>/post/f6880df7.html</url>
      
        <content type="html"><![CDATA[<h1 id="导言"><a href="#导言" class="headerlink" title="导言"></a>导言</h1><p><a href="https://link.zhihu.com/?target=http://ankisrs.net/">ankisrs.net/</a>官网下载</p><p>最近在学习前端，其中的标签，语句等等当时记得，但过了一两个星期就忘了。</p><p>因此我翻遍了知乎，从中找到了一款软件——Anki，不得不说它是我用过最好的记忆软件，艾宾浩斯，卡片记忆，笔记功能，收藏，标星等等</p><h1 id="Anki是什么？"><a href="#Anki是什么？" class="headerlink" title="Anki是什么？"></a>Anki是什么？</h1><p>本质上来说，Anki是一个辅助记忆软件，它<strong>可以在相对合适的时间来告诉你复习什么比较好。</strong></p><p>那么为什么我推荐使用Anki呢，它又适合哪些人呢？</p><ul><li><p><strong>它解决了我最为苦恼的遗忘问题。</strong>说解决或许有点夸大，但是每个人都会被遗忘所困扰。</p></li><li><ul><li><p>学生经常苦恼</p></li><li><ul><li>不知道复习，或者是即便复习了但是间隔过久也导致经常有遗忘的受挫感</li><li>学了新知识点就忘了</li></ul></li><li><p>工作的人</p></li><li><ul><li><p>经常说自己老了，记不住，记忆力退化</p></li><li><p>看书看完之后也就遗忘了</p></li><li><ul><li>或者即便做了读书笔记也并没有经常回顾复习</li></ul></li></ul></li></ul></li></ul><p>但是大多数人其实没有一个好的方法和工具来让自己保持持续学习与复习，而Anki恰好可以弥补。</p><ul><li><p><strong>Anki适合所有终身学习的人。</strong>不管你是小初高中大学生，也不需要关注你是否已经工作不需要再看那些学校的教材。只要你还有一天需要记忆你想要记忆的，学习你现在或者之后需要学习的知识，那么Anki就适合你。</p></li><li><p><strong>Anki可以帮助你记忆所有东西而不仅仅是单词。</strong>最初Anki的创作者的目的是利用这个软件来学习日语，Anki一词也来自于日语“暗記【あんき】【annki】◎” 但是作者只是开发这个软件的人，而更多的人使用这个软件也发现</p></li><li><ul><li>不仅能够帮助记忆单词，学习外语</li><li><strong>还可以学习各个科目的知识点</strong></li><li><strong>或者输入复习计划辅助自己进行学习。例如考研 四六级 GRE等</strong>都可以</li></ul></li><li><p><strong>Anki的自定义和可扩展性极强</strong>。所谓的自定义是说你可以利用ANKI呈现多种多样的形式，并且也可以自己调整参数来让Anki更加适合你。可扩展性就是有许多插件以及外部的工具来让ANKI更加强大。</p></li></ul><h1 id="Anki怎么使用？"><a href="#Anki怎么使用？" class="headerlink" title="Anki怎么使用？"></a>Anki怎么使用？</h1><p>在知乎上找了几篇不错的文章，自己学吧</p><p><a href="https://www.zhihu.com/question/28335314">使用教程</a></p><p><a href="https://www.zhihu.com/search?type=content&q=anki%E6%8F%92%E4%BB%B6">插件</a></p>]]></content>
      
      
      <categories>
          
          <category> 优质推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于Butterfly的深度优化</title>
      <link href="/post/e14dadae.html"/>
      <url>/post/e14dadae.html</url>
      
        <content type="html"><![CDATA[<h1 id="导言"><a href="#导言" class="headerlink" title="导言"></a>导言</h1><p>这篇教程中我将会从基础着手，一步一步提升网站速度，详细优化过程参见下方摘要</p><h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>1、CDN加速</p><blockquote><p>主题默认不加速的位置</p></blockquote><p>2、图片压缩</p><blockquote><p>压缩图片工作流 </p></blockquote><p>3、Gulp 压缩全站静态资源</p><blockquote><p>gulp的优缺点，并将其安装使用</p></blockquote><p>4、合并css</p><blockquote><p>合并css的方式</p></blockquote><p>5、手机端优化</p><blockquote><p>通过css进行优化</p></blockquote><p>6、镜像站支持</p><blockquote><p>verce，gitee，conding</p></blockquote><p>7、PWA</p><blockquote><p>糖果屋的教程</p></blockquote><p>8、杂项</p><blockquote><p>调整主题配置</p></blockquote><p>8.1、instantpage（预加载）<br>8.2、默认图片更改<br>8.3、Pangu(文字格式优化)<br>8.4、pjax</p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="CDN-加速"><a href="#CDN-加速" class="headerlink" title="CDN 加速"></a>CDN 加速</h2><p>butterflu默认的一些文件不会用jd加速所以请自行更改</p><h2 id="图片压缩"><a href="#图片压缩" class="headerlink" title="图片压缩"></a>图片压缩</h2><p>用<a href="https://github.com/meowtec/Imagine"><strong>imagine</strong></a>进行有损压缩后，再用<a href="http://www.pcfreetime.com/">格式工厂</a>转换为web格式</p><h2 id="Gulp-压缩全站静态资源"><a href="#Gulp-压缩全站静态资源" class="headerlink" title="Gulp 压缩全站静态资源"></a>Gulp 压缩全站静态资源</h2><blockquote><p><a href="https://www.gulpjs.com.cn/">gulp</a> 能够帮助用户自动压缩静态资源，配合各类下属插件，能够压缩包括 css、js、html 乃至各类格式的图片文件。（** 图片文件的压缩效果远远不如上文提到的 imagine 软件，所以此处不再写使用 gulp 压缩图片的内容**）</p></blockquote><p>安装 Gulp 插件：在博客根目录 [Blogroot] 打开终端，输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install --global gulp-cli <span class="comment">#全局安装gulp指令集</span></span><br><span class="line">npm install gulp --save <span class="comment">#安装gulp插件</span></span><br></pre></td></tr></table></figure><p>安装各个下属插件以实现对各类静态资源的压缩。<br>压缩 HTML：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install gulp-htmlclean --save-dev</span><br><span class="line">npm install gulp-html-minifier-terser --save-dev</span><br><span class="line"><span class="comment"># 用gulp-html-minifier-terser可以压缩HTML中的ES6语法</span></span><br></pre></td></tr></table></figure><p>压缩 CSS：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install gulp-clean-css --save-dev</span><br></pre></td></tr></table></figure><p>压缩JS：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install gulp-terser --save-dev</span><br></pre></td></tr></table></figure><p>为 Gulp 创建 gulpfile.js 任务脚本。在博客根目录 [Blogroot] 下新建 gulpfile.js, 打开 [Blogroot]\gulpfile.js, 输入以下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">//用到的各个插件</span><br><span class="line">var gulp = require(<span class="string">&#x27;gulp&#x27;</span>);</span><br><span class="line">var cleanCSS = require(<span class="string">&#x27;gulp-clean-css&#x27;</span>);</span><br><span class="line">var htmlmin = require(<span class="string">&#x27;gulp-html-minifier-terser&#x27;</span>);</span><br><span class="line">var htmlclean = require(<span class="string">&#x27;gulp-htmlclean&#x27;</span>);</span><br><span class="line">// gulp-tester</span><br><span class="line">var terser = require(<span class="string">&#x27;gulp-terser&#x27;</span>);</span><br><span class="line">// 压缩js</span><br><span class="line">gulp.task(<span class="string">&#x27;compress&#x27;</span>, () =&gt;</span><br><span class="line">  gulp.src([<span class="string">&#x27;./public/**/*.js&#x27;</span>, <span class="string">&#x27;!./public/**/*.min.js&#x27;</span>])</span><br><span class="line">    .pipe(terser())</span><br><span class="line">    .pipe(gulp.dest(<span class="string">&#x27;./public&#x27;</span>))</span><br><span class="line">)</span><br><span class="line">//压缩css</span><br><span class="line">gulp.task(<span class="string">&#x27;minify-css&#x27;</span>, () =&gt; &#123;</span><br><span class="line">    <span class="built_in">return</span> gulp.src([<span class="string">&#x27;./public/**/*.css&#x27;</span>])</span><br><span class="line">        .pipe(cleanCSS(&#123;</span><br><span class="line">            compatibility: <span class="string">&#x27;ie11&#x27;</span></span><br><span class="line">        &#125;))</span><br><span class="line">        .pipe(gulp.dest(<span class="string">&#x27;./public&#x27;</span>));</span><br><span class="line">&#125;);</span><br><span class="line">//压缩html</span><br><span class="line">gulp.task(<span class="string">&#x27;minify-html&#x27;</span>, () =&gt; &#123;</span><br><span class="line">    <span class="built_in">return</span> gulp.src(<span class="string">&#x27;./public/**/*.html&#x27;</span>)</span><br><span class="line">        .pipe(htmlclean())</span><br><span class="line">        .pipe(htmlmin(&#123;</span><br><span class="line">            removeComments: <span class="literal">true</span>, //清除html注释</span><br><span class="line">            collapseWhitespace: <span class="literal">true</span>, //压缩html</span><br><span class="line">            collapseBooleanAttributes: <span class="literal">true</span>,</span><br><span class="line">            //省略布尔属性的值，例如：&lt;input checked=<span class="string">&quot;true&quot;</span>/&gt; ==&gt; &lt;input /&gt;</span><br><span class="line">            removeEmptyAttributes: <span class="literal">true</span>,</span><br><span class="line">            //删除所有空格作属性值，例如：&lt;input id=<span class="string">&quot;&quot;</span> /&gt; ==&gt; &lt;input /&gt;</span><br><span class="line">            removeScriptTypeAttributes: <span class="literal">true</span>,</span><br><span class="line">            //删除&lt;script&gt;的<span class="built_in">type</span>=<span class="string">&quot;text/javascript&quot;</span></span><br><span class="line">            removeStyleLinkTypeAttributes: <span class="literal">true</span>,</span><br><span class="line">            //删除&lt;style&gt;和&lt;link&gt;的 <span class="built_in">type</span>=<span class="string">&quot;text/css&quot;</span></span><br><span class="line">            minifyJS: <span class="literal">true</span>, //压缩页面 JS</span><br><span class="line">            minifyCSS: <span class="literal">true</span>, //压缩页面 CSS</span><br><span class="line">            minifyURLs: <span class="literal">true</span>  //压缩页面URL</span><br><span class="line">        &#125;))</span><br><span class="line">        .pipe(gulp.dest(<span class="string">&#x27;./public&#x27;</span>))</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">// 运行gulp命令时依次执行以下任务</span><br><span class="line">gulp.task(<span class="string">&#x27;default&#x27;</span>, gulp.parallel(</span><br><span class="line">  <span class="string">&#x27;compress&#x27;</span>, <span class="string">&#x27;minify-css&#x27;</span>, <span class="string">&#x27;minify-html&#x27;</span></span><br><span class="line">))</span><br></pre></td></tr></table></figure><p>运行指令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl &amp;&amp; hexo g &amp;&amp; gulp &amp;&amp; hexo d</span><br></pre></td></tr></table></figure><h2 id="合并CSS"><a href="#合并CSS" class="headerlink" title="合并CSS"></a>合并CSS</h2><p>提示：我在参照糖果屋的教程时发现不生效，所以这里有一些小修改</p><blockquote><p>将魔改样式整合到 index.css 文件内，减少对服务器的请求次数。能够节省大量加载时间。</p></blockquote><p>在 [Blogroot]\themes\butterfly\source\css\ 路径下新建_custom 文件夹，然后把魔改样式的 CSS 文件拖动进去。文件目录层级可以表示为以下情况：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span></span><br><span class="line">  |__ css</span><br><span class="line">     |__ _custom</span><br><span class="line">        |__ custom1.css</span><br><span class="line">        |__ custom2.css</span><br><span class="line">        |__ custom3.css</span><br><span class="line">     |__ index.styl</span><br></pre></td></tr></table></figure><p>在 [[Blogroot]\themes\butterfly\source\css\index.styl 中新增一行代码:@import ‘_custom/你的css文件名.css’,如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> hexo-config(<span class="string">&#x27;css_prefix&#x27;</span>)</span><br><span class="line">  @import <span class="string">&#x27;nib&#x27;</span></span><br><span class="line">  @import <span class="string">&#x27;_third-party/normalize.min.css&#x27;</span></span><br><span class="line">// project</span><br><span class="line">@import <span class="string">&#x27;var&#x27;</span></span><br><span class="line">@import <span class="string">&#x27;_global/*&#x27;</span></span><br><span class="line">@import <span class="string">&#x27;_highlight/highlight&#x27;</span></span><br><span class="line">@import <span class="string">&#x27;_page/*&#x27;</span></span><br><span class="line">@import <span class="string">&#x27;_layout/*&#x27;</span></span><br><span class="line">@import <span class="string">&#x27;_tags/*&#x27;</span></span><br><span class="line">@import <span class="string">&#x27;_mode/*&#x27;</span></span><br><span class="line"></span><br><span class="line">// search</span><br><span class="line"><span class="keyword">if</span> hexo-config(<span class="string">&#x27;algolia_search.enable&#x27;</span>)</span><br><span class="line">  @import <span class="string">&#x27;_search/index&#x27;</span></span><br><span class="line">  @import <span class="string">&#x27;_search/algolia&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> hexo-config(<span class="string">&#x27;local_search&#x27;</span>) &amp;&amp; hexo-config(<span class="string">&#x27;local_search.enable&#x27;</span>)</span><br><span class="line">  @import <span class="string">&#x27;_search/index&#x27;</span></span><br><span class="line">  @import <span class="string">&#x27;_search/local-search&#x27;</span></span><br><span class="line">// My css</span><br><span class="line">    @import <span class="string">&quot;_custom/custom.css&quot;</span>;</span><br></pre></td></tr></table></figure><p>其中// My css为我的css<br>如果是外链</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@import <span class="string">&#x27;https://cdn.jsdelivr.net/gh/username/repo/css/example.css&#x27;</span></span><br></pre></td></tr></table></figure><p><strong>注意：如果不生效请检查jd的缓存</strong></p><h2 id="手机端优化"><a href="#手机端优化" class="headerlink" title="手机端优化"></a>手机端优化</h2><p>请将如下css添加进你引入的css中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">/*移动端优化：去除归档、标签、最新文章、公告、、只保留网站统计*/</span><br><span class="line"></span><br><span class="line">@media screen and (max-width: 800px) &#123;</span><br><span class="line">    <span class="comment">#aside_content div:not(:last-child) &#123;</span></span><br><span class="line">        display: none;</span><br><span class="line">        font-size: 13px;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="镜像站支持"><a href="#镜像站支持" class="headerlink" title="镜像站支持"></a>镜像站支持</h2><p>目前用的人比较多的有</p><ul><li>vercel：推荐，免费，快速</li><li>gitee：不建议使用，类似GitHub，在国内访问速度快且稳定</li><li>conding：不推荐，已被腾讯收购</li></ul><p>使用方式请自行谷歌</p><h2 id="PWA"><a href="#PWA" class="headerlink" title="PWA"></a>PWA</h2><p>糖果屋教程<a href="https://akilar.top/posts/8f31c3d0/">https://akilar.top/posts/8f31c3d0/</a></p><h2 id="杂项"><a href="#杂项" class="headerlink" title="杂项"></a>杂项</h2><p>其实在主题配置中也有许多的设置可以优化访问速度</p><h3 id="instantpage（预加载）"><a href="#instantpage（预加载）" class="headerlink" title="instantpage（预加载）"></a>instantpage（预加载）</h3><p>找到instantpage将其开启</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">instantpage:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><blockquote><p>当鼠标悬停到链接上超过 65 毫秒时，Instantpage 会对该链接进行预加载，可以提升访问速度。</p></blockquote><h3 id="默认图片更改"><a href="#默认图片更改" class="headerlink" title="默认图片更改"></a>默认图片更改</h3><p>找到default_top_img将其改为自用图片</p><blockquote><p>图片记得按照步骤2进行压缩</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">default_top_img:</span> <span class="string">这里填写你的图片链接</span></span><br></pre></td></tr></table></figure><h3 id="Pangu-文字格式优化"><a href="#Pangu-文字格式优化" class="headerlink" title="Pangu(文字格式优化)"></a>Pangu(文字格式优化)</h3><p>找到pangu将其开启</p><blockquote><p>它会自动替你在网页中所有的中文字和半形的英文、数字、符号之间插入空白。</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">pangu:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span> <span class="comment"># site/post</span></span><br></pre></td></tr></table></figure><h3 id="取消文章顶部图"><a href="#取消文章顶部图" class="headerlink" title="取消文章顶部图"></a>取消文章顶部图</h3><p>找到disable_top_img将其开启</p><blockquote><p>可以使文章页加载速度提升</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">disable_top_img:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h3 id="Pjax"><a href="#Pjax" class="headerlink" title="Pjax"></a>Pjax</h3><blockquote><p>通过 ajax 和 pushState 技术提供了极速的（无刷新 ajax 加载）浏览体验，并且保持了真实的地址、网页标题，浏览器的后退（前进）按钮也可以正常使用</p></blockquote><p>开启只需要在 _config.butterfly.yml 中 开启 pjax</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">pjax:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">exclude:</span></span><br><span class="line">    <span class="comment"># - xxxx</span></span><br><span class="line">    <span class="comment"># - xxxx</span></span><br></pre></td></tr></table></figure><h1 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h1><p>恭喜，你的博客已经完成了优化，可这并不代表结束，<strong>我的这篇文章仅仅针对自己的博客需求</strong>，如果你想获得更好的体验请自行谷歌教程</p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo优化 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
